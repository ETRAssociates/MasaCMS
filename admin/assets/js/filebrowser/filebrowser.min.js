MuraFileBrowser={config:{resourcepath:"User_Assets",directory:"",height:600,selectMode:0,endpoint:"",displaymode:2,selectCallback:function(){}},prettify:function(e){},render:function(e){var i=this,t="_"+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15);this.config=Mura.extend(e,this.config),this.endpoint=Mura.apiEndpoint+"filebrowser/",this.container=Mura("#MuraFileBrowserContainer"),this.container.append("<div id='"+t+"'><component :is='currentView'></component></div>"),this.target=t,this.main(),Mura.loader().loadcss(Mura.corepath+"/vendor/codemirror/codemirror.css").loadjs(Mura.adminpath+"/assets/js/vue.min.js",Mura.corepath+"/vendor/codemirror/codemirror.js",function(){i.mountbrowser()}),this.getURLVars()},main:function(e){},onError:function(e){console.log(e)},getURLVars:function(){var e={};window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(i,t,n){e[t]=n});e.CKEditorFuncNum&&(this.callback=e.CKEditorFuncNum)},validate:function(){return!0},getEditFile:function(e,i,t){var n=null==e?"":e,s=this.endpoint+"/edit?directory="+n+"&filename="+i.fullname+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");Mura.get(s).then(function(e){t(e)},function(e){this.onError(e)})},doDeleteFile:function(e,i,t,n){var s=null==e?"":e,r=this.endpoint+"/delete?directory="+s+"&filename="+i.fullname+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");Mura.get(r).then(function(e){t(e)},function(e){this.onError(e)})},doDuplicateFile:function(e,i,t,n){var s=null==e?"":e,r=this.endpoint+"/duplicate?directory="+s+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");var l={};l.file=i,Mura.post(r,l).then(function(e){t(e)},function(e){this.onError(e)})},doUpdateContent:function(e,i,t,n,s){var r=null==e?"":e,l=this.endpoint+"/update?directory="+r+"&filename="+i.fullname+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");Mura.post(l,{content:t}).then(function(e){n(e)},function(e){this.onError(e)})},doRenameFile:function(e,i,t,n){var s=null==e?"":e,r=this.endpoint+"/rename?directory="+s+"&filename="+i.fullname+"&name="+i.name+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");Mura.get(r).then(function(e){t(e)},function(e){this.onError(e)})},doNewFolder:function(e,i,t){var n=null==e?"":e,s=this.endpoint+"/addfolder?directory="+n+"&name="+i+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");Mura.get(s).then(function(e){t(e)},function(e){onError(e)})},loadDirectory:function(e,i,t,n,s,r,l,o){var a=null==e?"":e,c=this.endpoint+"browse?directory="+a+"&resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");i&&(c+="&pageindex="+i),o&&(c+="&itemsperpage="+o),s.length&&(c+="&filterResults="+s),Mura.get(c).then(function(e){t(e)},function(e){n(e)})},loadBaseDirectory:function(e,i,t){var n=t||this.config.directory,s=this.endpoint+"/browse?resourcepath="+this.config.resourcepath+"&directory="+n+"&settings=1";if(!this.validate())return error("No Access");Mura.get(s).then(function(i){e(i)},function(e){i(e)})},doUpload:function(e,i,t){var n=this.endpoint+"/upload?resourcepath="+this.config.resourcepath;if(!this.validate())return error("No Access");Mura.post(n,e).then(function(e){i(e)},function(e){this.onError(e)})},rotate:function(e,i,t,n){var s=this.endpoint+"rotate?resourcepath="+this.config.resourcepath;if(!this.validate())return n("No Access");var r={};r.file=JSON.parse(JSON.stringify(e)),r.direction=i,Mura.post(s,r).then(function(e){t(e)},function(e){this.onError(e)})},performResize:function(e,i,t,n){var s=this.endpoint+"resize?resourcepath="+this.config.resourcepath;if(!this.validate())return n("No Access");var r={};r.file=JSON.parse(JSON.stringify(e)),r.dimensions=i,Mura.post(s,r).then(function(e){t(e)},function(e){this.onError(e)})},performCrop:function(e,i,t){var n=this.endpoint+"processCrop?resourcepath="+this.config.resourcepath;if(!this.validate())return t("No Access");var s={},r=document.getElementById("imagediv"),l=document.getElementById("croprectangle"),o=l.getBoundingClientRect(),a=(e.info.width,e.info.height,{width:r.clientWidth,height:r.clientHeight}),c={x:0,y:0,width:0,height:0};c.x=l.offsetLeft,c.y=l.offsetTop,c.width=o.width,c.height=o.height,s.file=JSON.parse(JSON.stringify(e)),s.crop=c,s.size=a,Mura.post(n,s).then(function(e){i(e)},function(e){this.onError(e)})},crop:function(e,i){if(1!=i){var t={x:0,y:0,startX:0,startY:0},n=null;e.onmousemove=function(e){null!==n&&(r(e),n.style.width=Math.abs(t.x-t.startX)+"px",n.style.height=Math.abs(t.y-t.startY)+"px",n.style.left=t.x-t.startX<0?t.x+"px":t.startX+"px",n.style.top=t.y-t.startY<0?t.y+"px":t.startY+"px")},e.onmouseup=function(i){n=null,e.style.cursor="default"},e.onmousedown=function(i){if(null!==n);else{var s=document.getElementById("croprectangle");s&&s.parentNode.removeChild(s),r(i),t.startX=t.x,t.startY=t.y;e.getBoundingClientRect();(n=document.createElement("div")).className="rectangle",n.id="croprectangle",n.style.width=Math.abs(t.x-t.startX)+"px",n.style.height=Math.abs(t.y-t.startY)+"px",n.style.left=t.x-t.startX<0?t.x+"px":t.startX+"px",n.style.top=t.y-t.startY<0?t.y+"px":t.startY+"px",e.appendChild(n),e.style.cursor="crosshair"}}}else{var s=document.getElementById("croprectangle");s&&s.parentNode.removeChild(s)}function r(i){var n=i||window.event;e.getBoundingClientRect();n.pageX?i.target!=document.getElementById("imagediv")?(t.x=i.offsetX+i.target.offsetLeft,t.y=i.offsetY+i.target.offsetTop):(t.x=n.offsetX,t.y=n.offsetY):n.clientX&&(t.x=n.offsetX,t.y=n.offsetY)}},mountbrowser:function(){var e=this;Vue.directive("click-outside",{bind:function(e,i,t){e.clickOutsideEvent=function(n){e==n.target||e.contains(n.target)||t.context[i.expression](n)},document.body.addEventListener("click",e.clickOutsideEvent)},unbind:function(e){document.body.removeEventListener("click",e.clickOutsideEvent)}}),Vue.component("contextmenu",{props:["currentFile","menuy","menux"],template:'\n    <div id="newContentMenu" class="addNew" v-bind:style="{ left: (menux + 20) + \'px\',top: getTop() + \'px\' }">\n        <ul id="newContentOptions">\n          <li v-if="checkIsFile() && checkSelectMode()"><a href="#" @click.prevent="selectFile()"><i class="mi-check"></i>Select</a></li>\n          <li v-if="checkIsFile() && checkFileEditable()"><a href="#" @click.prevent="editFile()"><i class="mi-pencil"></i>Edit</a></li>\n          <li v-if="checkIsFile() && checkImageType()"><a href="#" @click.prevent="viewFile()"><i class="mi-image"></i>View</a></li>\n          <li v-if="checkIsFile() && checkImageType()"><a href="#" @click.prevent="duplicateFile()"><i class="mi-copy"></i>Duplicate</a></li>\n          <li><a href="#" @click.prevent="renameFile()"><i class="mi-edit"> Rename</i></a></li>\n          <li v-if="checkIsFile()"><a href="#" @click="downloadFile()"><i class="mi-download"> Download</i></a></li>\n          <li class="delete"><a href="#" @click="deleteFile()"><i class="mi-trash"> Delete</i></a></li>\n        </ul>\n      </div>\n    ',data:()=>({posx:0,posy:0}),computed:{},mounted:function(){},methods:{compstyle:function(){this.posx=this.menux,this.posy=this.menuy},getTop:function(){return this.menuy+window.pageYOffset},selectFile:function(){if(1!=MuraFileBrowser.config.selectMode)return MuraFileBrowser.config.selectCallback(i.currentFile);window.opener.CKEDITOR.tools.callFunction(e.callback,i.currentFile.url),window.close()},editFile:function(){i.editFile(this.successEditFile)},duplicateFile:function(){i.duplicateFile(i.refresh,i.displayError)},viewFile:function(){i.isDisplayWindow="VIEW",i.viewFile()},successEditFile:function(e){this.currentFile.content=e.data.content,i.isDisplayWindow="EDIT"},renameFile:function(){i.isDisplayWindow="RENAME"},downloadFile:function(){window.open(i.currentFile.url,"_blank")},deleteFile:function(){i.isDisplayWindow="DELETE"},checkSelectMode:function(){return i.checkSelectMode()},checkFileEditable:function(){return i.checkFileEditable()},checkImageType:function(){return i.checkImageType()},checkIsFile:function(){return i.checkIsFile()}}}),Vue.component("actionwindow",{props:["isDisplayWindow","currentFile","currentIndex","error"],template:'\n      <div id="actionwindow-wrapper">\n        <editwindow v-if="isDisplayWindow==\'EDIT\'" :currentFile="currentFile"></editwindow>\n        <renamewindow v-if="isDisplayWindow==\'RENAME\'" :currentFile="currentFile"></renamewindow>\n        <addfolderwindow v-if="isDisplayWindow==\'ADDFOLDER\'" :currentFile="currentFile"></addfolderwindow>\n        <downloadwindow v-if="isDisplayWindow==\'DOWNLOAD\'" :currentFile="currentFile"></downloadwindow>\n        <deletewindow v-if="isDisplayWindow==\'DELETE\'" :currentFile="currentFile"></deletewindow>\n        <errorwindow v-if="isDisplayWindow==\'ERROR\'" :currentFile="currentFile" :error="error"></errorwindow>\n      </div>\n    ',data:()=>({}),methods:{}}),Vue.component("renamewindow",{props:["currentFile"],template:'\n      <div class="ui-dialog dialog-nobg actionwindow-formwrapper">\n        <div>\n          <span class="ui-dialog-title">Rename</span>\n            <div>\n              <label>Name:</label>\n              <input type="text" v-model="filename"></input>\n            </div>\n        </div>\n        <div class="buttonset">\n          <button @click="updateRename()">Save</button>\n          <button @click="cancel()">Cancel</button>\n        </div>\n      </div>\n    ',data:()=>({filename:""}),methods:{updateRename:function(){this.currentFile.name=this.filename,i.renameFile(),i.isDisplayWindow=""},cancel:function(){i.isDisplayWindow=""}},mounted:function(){this.filename=this.currentFile.name,i.isDisplayContext=0}}),Vue.component("errorwindow",{props:["error"],template:'\n      <div class="ui-dialog dialog-confirm ui-dialog actionwindow-formwrapper">\n        <div>\n          <span class="ui-dialog-title">Error</span>\n          <h4>{{error}}</h4>\n        </div>\n        <div class="buttonset">\n          <button @click="cancel()">Close</button>\n        </div>\n      </div>\n    ',data:()=>({filename:""}),methods:{cancel:function(){i.isDisplayWindow=""}}}),Vue.component("addfolderwindow",{props:["currentFile"],template:'\n      <div class="ui-dialog dialog-nobg actionwindow-formwrapper">\n        <div>\n          <span class="ui-dialog-title">Add Folder</span>\n            Name:\n            <input type="text" v-model="foldername"></input>\n        </div>\n        <div class="buttonset">\n          <button @click="newFolder()">Save</button>\n          <button @click="cancel()">Cancel</button>\n        </div>\n      </div>\n    ',data:()=>({foldername:""}),methods:{newFolder:function(){i.newFolder(this.foldername),i.isDisplayWindow=""},cancel:function(){i.isDisplayWindow=""}},mounted:function(){}}),Vue.component("gallerywindow",{props:["currentFile","currentIndex","total"],template:'\n      <div class="fileviewer-modal">\n        <div class="fileviewer-gallery" v-click-outside="closewindow">\n          <div class="fileviewer-image" :style="{ \'background-image\': \'url(\' + encodeURI(currentFile.url) + \'?\' + Math.ceil(Math.random()*100000) + \')\' }"></div>\n            <div>\n              <div class="actionwindow-left" @click="lastimage"><i class="mi-caret-left"></i></div>\n              <div class="actionwindow-right" @click="nextimage"><i class="mi-caret-right"></i></div>\n              <div class="fileviewer-gallery-menu">\n                <ul>\n                  <li v-if="checkImageType() && checkSelectMode()"><a @click="selectFile()"><i class="mi-check"></i>Select</a></li>\n                  <li v-if="checkImageType()"><a @click="editImage()"><i class="mi-check"></i>Edit Image</a></li>\n                  <li v-if="checkFileEditable()"><a @click="editFile()"><i class="mi-pencil"></i>Edit</a></li>\n                  <li><a @click="renameFile()"><i class="mi-edit"></i>Rename</a></li>\n                  <li v-if="checkIsFile()"><a @click="downloadFile()"><i class="mi-download"></i>Download</a></li>\n                  <li><a @click="deleteFile()"><i class="mi-trash"></i>Delete</a></li>\n                  <li><a @click="closewindow()"><i class="mi-times"></i>Close</a></li>\n                </ul>\n              <p>{{currentFile.fullname}} ({{currentFile.size}}kb <span v-if="checkImageType()">{{currentFile.info.width}}x{{currentFile.info.height}}</span>)</p>\n          </div>\n        </div>\n      </div>\n    ',data:()=>({}),mounted:function(){this.$root.isDisplayContext=0},methods:{lastimage:function(){i.previousFile(1)},nextimage:function(){i.nextFile(1)},closewindow:function(e){this.$root.isDisplayWindow=""},renameFile:function(){i.isDisplayWindow="RENAME"},editImage:function(){i.isDisplayWindow="EDITIMAGE"},downloadFile:function(){window.open(i.currentFile.url,"_blank")},deleteFile:function(){i.isDisplayWindow="DELETE"},checkSelectMode:function(){return i.checkSelectMode()},checkFileEditable:function(){return i.checkFileEditable()},checkImageType:function(){return i.checkImageType()},checkIsFile:function(){return i.checkIsFile()}}}),Vue.component("imageeditwindow",{props:["currentFile","currentIndex","total"],template:'\n    <div class="fileviewer-modal">\n      <imageeditmenu class="fileviewer-gallery" :currentFile="currentFile" :currentIndex="currentIndex" v-click-outside="closewindow"></imageeditmenu>\n    </div>\n    ',data:()=>({}),mounted:function(){},methods:{closewindow:function(e){this.$root.isDisplayWindow=""}}}),Vue.component("imageeditmenu",{props:["currentFile","currentIndex"],template:'\n       <div class="fileviewer-modal">\n        <div class="fileviewer-image" id="imagediv" :style="{ \'background-image\': \'url(\' + encodeURI(currentFile.url) + \'?\' + Math.ceil(Math.random()*100000) + \')\' }"></div>\n        <div>\n          <div class="fileviewer-gallery-menu">\n            <ul>\n              \x3c!--- MAIN ---\x3e\n              <span v-if="editmode==\'\'">\n                <li><a @click="crop()"><i class="mi-crop"> Crop</i></a></li>\n                <li><a @click="rotateRight()"><i class="mi-rotate-right"> Rotate Right</i></a></li>\n                <li><a @click="rotateLeft()"><i class="mi-rotate-left"> Rotate Left</i></a></li>\n                <li><a @click="resize()"><i class="mi-expand"> Resize</i></a></li>\n                <li><a @click="cancel()"><i class="mi-chevron-left"> Back</i></a></li>\n              </span>\n              \x3c!--- CROP ---\x3e\n              <span  v-if="editmode==\'CROP\'">\n                <li><a @click="confirmCrop()"><i class="mi-check"> Confirm</i></a></li>\n                <li><a @click="cancel()"><i class="mi-times"> Cancel</i></a></li>\n              </span>\n              \x3c!--- RESIZE ---\x3e\n              <span  v-if="editmode==\'RESIZE\'">\n                <li>Width: <input :disabled="resizedimensions.aspect == \'height\'" name="resize-width" v-model="resizedimensions.width"></li>\n                <li>Height: <input :disabled="resizedimensions.aspect == \'width\'" name="resize-height" v-model="resizedimensions.height"></li>\n                <li>Aspect:\n                  <select name="resize-aspect" v-model="resizedimensions.aspect">\n                    <option value="none">None</option>\n                    <option value="height">Height</option>\n                    <option value="width">Width</option>\n                    <option value="within">Within</option>\n                  </select>\n                </li>\n                <li><a @click="confirmResize()"><i class="mi-check"> Confirm</i></a></li>\n                <li><a @click="cancel()"><i class="mi-times"> Cancel</i></a></li>\n              </span>\n            </ul>\n            <p>{{currentFile.fullname}} ({{currentFile.size}}kb {{currentFile.info.width}}x{{currentFile.info.height}})</p>\n          </div>\n        </div>\n      </div>\n    ',data:()=>({editmode:"",resizedimensions:{width:0,height:0,backup:0,aspect:"none"}}),mounted:function(){this.resizedimensions.width=this.currentFile.info.width,this.resizedimensions.height=this.currentFile.info.height,this.$root.isDisplayContext=0,this.editmode=""},methods:{rotateLeft:function(){MuraFileBrowser.rotate(this.currentFile,"counterclock",this.rotateComplete)},rotateRight:function(){MuraFileBrowser.rotate(this.currentFile,"clock",this.rotateComplete)},rotateComplete(){this.$root.refresh(null,null,displaywindow="EDITIMAGE")},resize(){this.editmode="RESIZE"},confirmResize(){MuraFileBrowser.performResize(this.currentFile,this.resizedimensions,this.resizeComplete)},resizeComplete(){this.$root.refresh(null,null,displaywindow="EDITIMAGE")},crop:function(){this.editmode="CROP",MuraFileBrowser.crop(document.getElementById("imagediv"))},confirmCrop:function(){MuraFileBrowser.performCrop(this.currentFile,this.cropComplete)},cropComplete:function(){this.$root.refresh()},closewindow:function(e){this.$root.isDisplayWindow=""},cancel:function(e){this.$root.isDisplayWindow="VIEW",this.editmode=""}}}),Vue.component("deletewindow",{props:["currentFile"],template:'\n      <div class="ui-dialog dialog-confirm actionwindow-formwrapper">\n        <span class="ui-dialog-title">Delete</span>\n          <p>Confirm Deletion: {{currentFile.fullname}}</p>\n          <div class="buttonset">\n            <button @click="doDelete()">Delete</button>\n            <button @click="cancel()">Cancel</button>\n          </div>\n      </div>\n    ',data:()=>({}),methods:{doDelete:function(){i.deleteFile(i.refresh,i.displayError),i.isDisplayWindow=""},cancel:function(){i.isDisplayWindow=""}}}),Vue.component("editwindow",{props:["currentFile"],template:'\n      <div class="ui-dialog dialog-nobg actionwindow-formwrapper">\n        <span class="ui-dialog-title">Edit</span>\n        <textarea id="contenteditfield" class="editwindow" v-model="filecontent"></textarea>\n        <div class="buttonset">\n          <button @click="updateContent()">Update</button>\n          <button @click="cancel()">Cancel</button>\n        </div>\n      </div>\n    ',data:()=>({filecontent:""}),methods:{updateContent:function(){i.updateContent(this.filecontent),i.isDisplayWindow=""},cancel:function(){i.isDisplayWindow=""},selectAll:function(){editor.commands.selectAll(this.editor)},autoFormat:function(){}},mounted:function(){this.filecontent=this.currentFile.content}}),Vue.component("appbar",{props:["links","isbottomnav","response","itemsper","location"],template:'\n      <div class="filewindow-appbar">\n          <navmenu v-if="response.links" :links="links" :response="response" :itemsper="itemsper" :isbottomnav="isbottomnav"></navmenu>\n          <modemenu v-if="location"></modemenu>\n      </div>\n    ',data:function(){return{}},computed:{},methods:{applyPage:function(e){var t=1;"last"==e?t=parseInt(i.response.totalpages):"next"==e?t=parseInt(i.response.pageindex)+1:"previous"==e&&(t=parseInt(i.response.pageindex)-1),this.$parent.refresh("",t)},applyItemsPer:function(){this.$parent.itemsper=this.itemsper}}}),Vue.component("modemenu",{props:["links","isbottomnav","response","itemsper","displaymode"],template:'\n        <div class="filewindow-modemenu">\n          <div class="btn-group btn-group-toggle" data-toggle="buttons">\n            <a class="btn btn-secondary" v-bind:class="{ highlight: viewmode == 1 }" @click="switchMode(1)">\n              <i class="mi-th" title="Grid View"></i>\n            </a>\n            <a class="btn btn-secondary" v-bind:class="{ highlight: viewmode == 2 }" @click="switchMode(2)">\n              <i class="mi-bars" title="List View"></i>\n            </a>\n          </div>\n          <a @click="newFolder" class="btn btn-secondary">\n            <i class="mi-folder" title="Add Folder"></i>\n          </a>\n          <input class="filebrowser-filter" placeholder="Type to filter" v-model="filterResults" v-on:input="filterChange">\n        </div>\n    ',data(){return{viewmode:this.$root.displaymode,filterResults:"",timeout:void 0}},methods:{switchMode:function(e){var i={displaymode:JSON.parse(JSON.stringify(e))};Mura.createCookie("fbDisplayMode",JSON.stringify(i),1e3),this.$root.displaymode=this.viewmode=e},newFolder:function(){i.isDisplayWindow="ADDFOLDER"},filterChange:function(e,i){this.timeout&&window.clearTimeout(this.timeout),this.$root.filterResults=this.filterResults,this.timeout=window.setTimeout(this.$root.refresh,500)}}}),Vue.component("navmenu",{props:["links","isbottomnav","response","itemsper"],template:'\n        <div class="filewindow-navmenu">\n          <p v-if="isbottomnav">\n          {{response.pageindex}} of {{response.totalpages}} \x3c!-- ({{response.totalitems}}) includes folders --\x3e\n          </p>\n        <ul class="pagination" v-if="response.totalitems>=25">\n          <li class="paging" v-if="links.previous || links.next">\n            <a href="#" v-if="links.first" @click.prevent="applyPage(\'first\')">\n              <i class="mi-angle-double-left"></i>\n            </a>\n            <a v-else class="disabled">\n              <i class="mi-angle-double-left"></i>\n            </a>\n          </li>\n          <li class="paging" v-if="links.previous || links.next">\n            <a href="#" v-if="links.previous" @click.prevent="applyPage(\'previous\')">\n              <i class="mi-angle-left"></i>\n            </a>\n            <a v-else class="disabled">\n              <i class="mi-angle-left"></i>\n            </a>\n          </li>\n          <li class="paging" v-if="links.previous || links.next">\n            <a href="#" v-if="links.next" @click.prevent="applyPage(\'next\')">\n              <i class="mi-angle-right"></i>\n            </a>\n            <a v-else class="disabled">\n              <i class="mi-angle-right"></i>\n            </a>\n          </li>\n          <li class="paging paging-last" v-if="links.previous || links.next">\n            <a href="#" v-if="links.last" @click.prevent="applyPage(\'last\')">\n              <i class="mi-angle-double-right"></i>\n            </a>\n            <a v-else class="disabled">\n              <i class="mi-angle-double-right"></i>\n            </a>\n          </li>\n\n          <li class="pull-right">\n            <select class="itemsper" @change="applyItemsPer" v-model="itemsper">\n              <option value=\'25\' :selected="itemsper == 25 ? \'selected\' : null">25</option>\n              <option value=\'50\' :selected="itemsper == 50 ? \'selected\' : null">50</option>\n              <option value=\'100\' :selected="itemsper == 100 ? \'selected\' : null">100</option>\n              <option value=\'9999\' :selected="itemsper == 9999 ? \'selected\' : null">All</option>\n            </select>\n          </li>\n          <li class="pull-right"><label class="itemsper-label">View in groups of </label></li>\n\n        </ul>\n      </div>\n    ',data(){},methods:{applyPage:function(e){var t=1;"last"==e?t=parseInt(i.response.totalpages):"next"==e?t=parseInt(i.response.pageindex)+1:"previous"==e&&(t=parseInt(i.response.pageindex)-1),this.$root.refresh("",t)},applyItemsPer:function(){this.$root.itemsper=this.itemsper,this.$root.refresh()}}}),Vue.component("listmode",{props:["files","folders","foldertree","isDisplayContext","currentFile","settings"],template:'\n      <div class="listmode-wrapper">\n        <table class="mura-table-grid">\n          <thead>\n            <tr>\n              <th class="actions">\n                <a v-if="foldertree.length" class="folder-back" href="#" @click.prevent="back()">\n                  &nbsp;\n                  <i class="mi-arrow-circle-o-left"></i>\n                </a>\n              </th>\n              <th class="var-width">{{settings.rb.filebrowser_filename}}</th>\n              <th>{{settings.rb.filebrowser_size}}</th>\n              <th>{{settings.rb.filebrowser_modified}}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-if="files.length==0">\n              <td class="actions"></td>\n              <td class="var-width">No Results</td>\n              <td></td>\n              <td></td>\n            </tr>\n            <tr v-for="(file,index) in files">\n              <td class="actions">\n                <a href="#" :id="\'fileitem-\'+index" class="show-actions" @click.prevent="openMenu($event,file,index)"><i class="mi-ellipsis-v"></i></a>\n                <div class="actions-menu hide">\n                  <ul class="actions-list">\n                    <li class="edit"><a @contextmenu="openMenu($event,file,index)"><i class="mi-pencil"></i>View</a></li>\n                  </ul>\n                </div>\n              </td>\n              <td class="var-width">\n                <a v-if="parseInt(file.isfile)" href="#" @click.prevent="viewFile(file,index)">{{file.fullname}}</a>\n                <a v-else href="#" @click.prevent="refresh(file.name)"><i class="mi-folder"></i> {{file.fullname}}</a>\n              </td>\n              <td>\n                <div v-if="parseInt(file.isfile)">\n                  {{file.size}}kb\n                </div>\n                <div v-else>\n                  --\n                </div>\n              </td>\n              <td>\n                  {{file.lastmodifiedshort}}\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n        <contextmenu :currentFile="this.$parent.currentFile" :isDisplayContext="this.$root.isDisplayContext" v-if="isDisplayContext" :menux="menux" :menuy="menuy"></contextmenu>\n      </div>',data:()=>({menux:0,menuy:0}),mounted:function(){this.$root.isDisplayContext=0},methods:{refresh:function(e,i){this.$root.refresh(e,i)},displayError:function(e){this.$root.displayError(e)},back:function(){this.$root.back()},viewFile:function(e,t){this.$root.currentFile=e,this.$root.currentIndex=t,this.checkImageType(e,t)?i.isDisplayWindow="VIEW":this.checkFileEditable(e,t)&&i.editFile(this.successEditFile)},successEditFile:function(e){this.currentFile.content=e.data.content,i.isDisplayWindow="EDIT"},isViewable:function(e,t){return this.$root.currentFile=e,this.$root.currentIndex=t,i.isViewable()},checkFileEditable:function(e,t){return this.$root.currentFile=e,this.$root.currentIndex=t,i.checkFileEditable()},checkImageType:function(e,t){return this.$root.currentFile=e,this.$root.currentIndex=t,i.checkImageType()},checkIsFile:function(){return i.checkIsFile()},openMenu:function(e,i,t,n){this.$root.isDisplayContext=0;var s=Math.floor(document.getElementById("fileitem-"+t).getBoundingClientRect().left)-26,r=Math.floor(document.getElementById("fileitem-"+t).getBoundingClientRect().top)+window.scrollX;this.$nextTick(function(){this.$root.isDisplayContext=1}),this.$root.isDisplayWindow="",this.$root.currentFile=i,this.$root.currentFile.index=t,this.$root.currentIndex=t,this.menux=s,this.menuy=r,e.preventDefault()}}}),Vue.component("gridmode",{props:["files","folders","foldertree","isDisplayContext","currentFile"],template:'\n      <div class="gridmode-wrapper">\n        <div v-if="foldertree.length" class="fileviewer-item" @click="back()">\n          <div class="fileviewer-item-icon">\n            <i class="mi-arrow-circle-o-left"></i>\n          </div>\n          <div class="fileviewer-item-meta">\n            <div class="fileviewer-item-label">\n              Back\n            </div>\n          </div>\n        </div>\n        <div v-for="(file,index) in files">\n          <div class="fileviewer-item"  :id="\'fileitem-\'+index"  v-if="parseInt(file.isfile)" @click="openMenu($event,file,index)">\n            <div class="fileviewer-item-image">\n              <div v-if="0" class="fileviewer-item-icon" :class="[\'fileviewer-item-icon-\' + file.type]"></div>\n              <div v-else class="fileviewer-item-icon" :style="{ \'background-image\': \'url(\' + encodeURI(file.url) + \')\' }"></div>\n            </div>\n            <div class="fileviewer-item-meta">\n              <div class="fileviewer-item-label">\n                {{file.fullname}}\n              </div>\n              <div class="fileviewer-item-meta-details">\n                <div v-if="parseInt(file.isfile)" class="fileviewer-item-meta-size">\n                  {{file.size}}kb\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="fileviewer-item" v-else @click="refresh(file.name)">\n            <div class="fileviewer-item-icon">\n              <i class="mi-folder-open"></i>\n            </div>\n            <div class="fileviewer-item-meta">\n              <div class="fileviewer-item-label">\n                {{file.fullname}}\n              </div>\n              <div class="fileviewer-item-meta-details">\n                <div v-if="parseInt(file.isfile)" class="fileviewer-item-meta-size">\n                  {{file.size}}kb\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="clearfix"></div>\n        <contextmenu :currentFile="this.$parent.currentFile" :isDisplayContext="isDisplayContext" v-if="isDisplayContext" :menux="menux" :menuy="menuy"></contextmenu>\n      </div>',data:()=>({menux:0,menuy:0,offsetx:0,offsety:0}),mounted:function(){this.$root.isDisplayContext=0},methods:{refresh:function(e,i){this.$root.refresh(e,i)},back:function(){this.$root.back()},openMenu:function(e,i,t){this.menux=Math.floor(document.getElementById("fileitem-"+t).getBoundingClientRect().left)+5,this.menuy=Math.floor(document.getElementById("fileitem-"+t).getBoundingClientRect().top)+10+window.scrollX,this.$root.currentFile=i,this.$root.currentIndex=t,this.$root.isDisplayContext=0,this.$nextTick(function(){this.$root.isDisplayContext=1}),this.$root.isDisplayWindow="",this.$root.currentFile=i,this.$root.currentFile.index=t,this.$root.currentIndex=t,e.preventDefault()}}}),Vue.component("filewindow",{props:["files","folders","foldertree","isDisplayContext","currentFile","settings","displaymode"],template:'\n      <div class="filewindow-wrapper">\n        <gridmode v-if="displaymode==1" :currentFile="currentFile"   :foldertree="foldertree" :files="files" :folders="folders" :isDisplayContext="isDisplayContext"></gridmode>\n        <listmode  v-if="displaymode==2" :settings="settings" :currentFile="currentFile" :foldertree="foldertree" :files="files" :folders="folders" :isDisplayContext="isDisplayContext"></listmode>\n      </div>',data:()=>({}),methods:{}}),Vue.component("spinner",{template:'\n      <div id="spinner">\n\n      </div>',data:()=>({}),mounted:function(){$("#spinner").spin(spinnerArgs)},destroyed:function(){$("#spinner").spin(!1)},methods:{}});var i=new Vue({el:"#"+e.target,template:'\n      <div class="fileviewer-wrapper">\n        <spinner v-if="spinnermodal"></spinner>\n        {{message}}\n        <gallerywindow v-if="isDisplayWindow==\'VIEW\'" :settings="settings" :currentFile="currentFile" :currentIndex="currentIndex"></gallerywindow>\n        <imageeditwindow v-if="isDisplayWindow==\'EDITIMAGE\'" :settings="settings" :currentFile="currentFile" :currentIndex="currentIndex"></imageeditwindow>\n        <actionwindow v-if="isDisplayWindow" :settings="settings" :isDisplayWindow="isDisplayWindow" :currentIndex="currentIndex" :currentFile="currentFile" :error="error"></actionwindow>\n        <div class="mura-header">\n          <ul class="breadcrumb">\n            <li @click="setDirDepth(-1)"><a><i class="mi-home"></i>{{resourcepath}}</a></li>\n            <li v-for="(item,index) in foldertree" @click="setDirDepth(index)"><a><i class="mi-folder-open"></i>{{item}}</a></li>\n          </ul>\n        </div>\n        <div class="fileviewer-droptarget">\n          <form enctype="multipart/form-data" novalidate v-if="isStart || isSave">\n            <input type="file" multiple :name="uploadField" :disabled="isSave" @change="filesChanged($event.target.name, $event.target.files);" accept="*.*" class="file-input-field">\n            <p v-if="isStart" class="upload-icon">\n              {{settings.rb.filebrowser_draghere}}\n            </p>\n            <p v-if="isSave" class="download-icon">\n              {{settings.rb.filebrowser_uploading}} ({{fileCount}})\n            </p>\n          </form>\n        </div>\n        <appbar v-if="response.links" :settings="settings" :location=1 :links="response.links" :itemsper="itemsper" :response="response"></appbar>\n        <filewindow :settings="settings" :currentFile="currentFile" :isDisplayContext="isDisplayContext" :foldertree="foldertree" :files="files" :folders="folders" :displaymode="displaymode"></filewindow>\n        <appbar v-if="response.links" :settings="settings" :location=0 :links="response.links" :itemsper="itemsper" :response="response"></appbar>\n      </div>',data:{currentView:"fileviewer",currentState:null,currentFile:null,currentIndex:0,foldertree:[],fileCount:0,files:[],folders:[],spinnermodal:0,error:"",settings:{rb:{}},displaymode:this.config.displaymode,uploadedFiles:[],isDisplayContext:0,isDisplayWindow:"",uploadField:"uploadFiles",filterResults:"",sortOn:"",sortDir:"ASC",itemsper:25,message:"",editfilelist:e.editfilelist,resourcepath:this.config.resourcepath.replace("_"," "),response:{pageindex:0}},ready:function(){},computed:{isStart(){return 0===this.currentState},isSave(){return 1===this.currentState},isSuccess(){return 2===this.currentState},isonError(){return 3===this.currentState}},methods:{updateDelete:function(){e.updateDelete(currentFile)},updateContent:function(i){for(var t="",n=0;n<this.foldertree.length;n++)t=t+"/"+this.foldertree[n];e.doUpdateContent(t,this.currentFile,i,this.refresh)},renameFile:function(){for(var i="",t=0;t<this.foldertree.length;t++)i=i+"/"+this.foldertree[t];e.doRenameFile(i,this.currentFile,this.refresh)},newFolder:function(i){for(var t="",n=0;n<this.foldertree.length;n++)t=t+"/"+this.foldertree[n];e.doNewFolder(t,i,this.refresh)},updateEdit:function(){e.updateEdit(currentFile)},displayResults:function(e){this.response=e.data,this.files=e.data.items,this.folders=e.data.folders,e.data.settings&&(this.settings=e.data.settings),this.$nextTick(function(){this.spinnermodal=0})},displayError:function(e){e.message&&(this.message=message)},previousFile(e){if(e=e||0,index=this.currentIndex,index--,!(index+1<=0)&&parseInt(this.files[index].isfile))return e&&this.checkImageType()||!e?(this.currentFile=this.files[index],void(this.currentIndex=index)):void this.previousFile(e)},nextFile(e){if(e=e||0,index=this.currentIndex,index++,!(index>=this.files.length))return e&&this.checkImageType()||!e?(this.currentFile=this.files[index],void(this.currentIndex=index)):void this.nextFile(e)},upload:function(){},uploadReset(){this.currentState=0,this.uploadedFiles=[],this.error=null},setDirDepth:function(e){this.foldertree=this.foldertree.slice(0,e+1),this.refresh()},editFile:function(i,t){for(var n="",s=0;s<this.foldertree.length;s++)n=n+"/"+this.foldertree[s];e.getEditFile(n,this.currentFile,i)},viewFile:function(e){},deleteFile:function(i,t){for(var n="",s=0;s<this.foldertree.length;s++)n=n+"/"+this.foldertree[s];e.doDeleteFile(n,this.currentFile,i,t)},duplicateFile:function(i,t){for(var n="",s=0;s<this.foldertree.length;s++)n=n+"/"+this.foldertree[s];e.doDuplicateFile(n,this.currentFile,i,t)},refresh:function(i,t,n){n?(this.isDisplayWindow="",this.$nextTick(function(){this.$root.isDisplayWindow=n})):this.isDisplayWindow="",i&&i.length&&this.foldertree.push(i);var s="";isNaN(t);for(var r=0;r<this.foldertree.length;r++)s=s+"/"+this.foldertree[r];this.isDisplayContext="",this.spinnermodal=1;var l={foldertree:JSON.parse(JSON.stringify(this.foldertree))};Mura.createCookie("fbFolderTree",JSON.stringify(l),1),e.loadDirectory(s,t,this.displayResults,this.displayError,this.filterResults,this.sortOn,this.sortDir,this.itemsper,n)},back:function(){this.foldertree.splice(-1);this.foldertree.length||this.foldertree[this.foldertree.length-1];this.refresh()},closeMenu:function(e){this.isDisplayContext=0,e.preventDefault()},filesChanged:function(e,i){this.uploadedFiles=i;const t=new FormData;var n="";if(i.length){this.fileCount=i.length,Array.from(Array(i.length).keys()).map(n=>{t.append(e,i[n],i[n].name)});for(var s=0;s<this.foldertree.length;s++)n=n+"/"+this.foldertree[s];t.append("directory",n),this.save(t)}},save:function(i){this.currentState=1,e.doUpload(i,this.saveComplete)},saveComplete:function(){this.uploadReset(),this.refresh()},checkSelectMode:function(){return MuraFileBrowser.config.selectMode},isViewable:function(){for(var e=this.settings.editfilelist,i=this.settings.imagelist,t=0;t<e.length;t++)if(this.currentFile.ext.toLowerCase()==e[t])return!0;for(t=0;t<i.length;t++)if(this.currentFile.ext.toLowerCase()==i[t])return!0;return!1},checkFileEditable:function(){for(var e=this.settings.editfilelist,i=0;i<e.length;i++)if(this.currentFile.ext.toLowerCase()==e[i])return!0;return!1},checkImageType:function(){for(var e=this.settings.imagelist,i=0;i<e.length;i++)if(this.currentFile.ext.toLowerCase()==e[i])return!0;return!1},checkIsFile:function(){return!!Math.floor(this.currentFile.isfile)}},mounted:function(){this.uploadReset(),this.$nextTick(function(){this.spinnermodal=1}),this.selectMode=e.config.selectMode;var i="",t=Mura.readCookie("fbFolderTree");if(t){var n=JSON.parse(t);if(n.foldertree){this.$root.foldertree=n.foldertree;for(var s=0;s<this.foldertree.length;s++)i=i+"/"+this.foldertree[s]}}var r=Mura.readCookie("fbDisplayMode");if(r){var l=JSON.parse(r);l.displaymode&&(this.$root.displaymode=this.viewmode=l.displaymode)}e.loadBaseDirectory(this.displayResults,this.displayError,i),window.addEventListener("mouseup",function(e){})}})}};